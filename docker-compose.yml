version: "3"
services:
  #PHP Service

  app:
    build:
      context: ./.docker/php/
      dockerfile: Dockerfile
    image: php:laravel
    container_name: phpLaravel
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./project:/var/www
      - ./.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    command: /bin/sh -c "chmod 777 ./entrypoint.sh && ./entrypoint.sh"
    networks:
      - app-network

  webserver:
    image: nginx:1.9
    container_name: webserver
    restart: unless-stopped
    tty: true
    volumes:
      - ./project:/var/www
      - ./.docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
    networks:
      - app-network

  db:
    image: mysql:5.7.32
    platform: linux/amd64
    container_name: laravel-db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - db_clothing_website:/var/lib/mysql
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: 123123
    networks:
      - app-network
  phpmyadmin:
      image: phpmyadmin/phpmyadmin
      container_name: pma
      links:
        - db
      environment:
        PMA_HOST: db
        PMA_PORT: 3306
        PMA_ARBITRARY: 1
      restart: always
      ports:
        - 8080:80
      networks:
        - app-network
  # node:
  #   image: node:14.15.4
  #   working_dir: /var/www
  #   volumes: 
  #     - ./project:/var/www
  #   environment:
  #     ENVIRONMENT: "dev" # product | dev
  #   command: /bin/sh -c "chmod 777 ./nodejsEntrypoint.sh && ./nodejsEntrypoint.sh"
  #   networks:
  #     - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
volumes: 
  db_clothing_website:
    name: db_clothing_website